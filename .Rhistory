FOLATE_SERV = DT_FOLFD,
IRON_SERV = DT_IRON
)
#Score calculation for AHEIP
##Create variables needed for AHEIP calculation
AHEIP_MIN = 0
AHEIP_MAX = 10
AHEIP_MIN_VEG_SERV = 0
AHEIP_MAX_VEG_SERV = 5
AHEIP_MIN_FRT_SERV = 0
AHEIP_MAX_FRT_SERV = 4
AHEIP_MIN_WHITERED_SERV = 0
AHEIP_MAX_WHITERED_SERV = 4
AHEIP_MIN_FIBER_SERV = 0
AHEIP_MAX_FIBER_SERV = 25
AHEIP_MIN_TRANS_SERV = 4
AHEIP_MAX_TRANS_SERV = 0.5
AHEIP_MIN_POLYSAT_SERV = 0.1
AHEIP_MAX_POLYSAT_SERV = 1
AHEIP_MIN_CALCIUM_SERV = 0
AHEIP_MAX_CALCIUM_SERV = 1200
AHEIP_MIN_FOLATE_SERV = 0
AHEIP_MAX_FOLATE_SERV = 600
AHEIP_MIN_IRON_SERV = 0
AHEIP_MAX_IRON_SERV = 27
AHEIP_HEALTHY = function(actual, min, max){
case_when(
actual >= max ~ AHEIP_MAX,
actual <= min ~ AHEIP_MIN,
TRUE ~ AHEIP_MIN+(actual-min)*AHEIP_MAX/(max-min)
)
}
AHEIP_UNHEALTHY = function(actual, min, max){
case_when(
actual >= min ~ AHEIP_MIN ,
actual <= max ~ AHEIP_MAX,
TRUE ~ AHEIP_MIN+(actual-min)*AHEIP_MAX/(max-min)
)
}
Clean_result_data_ALL = Clean_result_data_SERV5 %>%
mutate(
AHEIP_VEG = AHEIP_HEALTHY(VEG_SERV, AHEIP_MIN_VEG_SERV, AHEIP_MAX_VEG_SERV),
AHEIP_FRT = AHEIP_HEALTHY(FRT_SERV, AHEIP_MIN_FRT_SERV, AHEIP_MAX_FRT_SERV),
AHEIP_WHITEREAD = AHEIP_HEALTHY(WHITERED_RT_SERV, AHEIP_MIN_WHITERED_SERV, AHEIP_MAX_WHITERED_SERV),
AHEIP_FIBER = AHEIP_HEALTHY(FIBER_SERV, AHEIP_MIN_FIBER_SERV, AHEIP_MAX_FIBER_SERV),
AHEIP_TRANS = AHEIP_UNHEALTHY(TRANS_SERV, AHEIP_MIN_TRANS_SERV, AHEIP_MAX_TRANS_SERV),
AHEIP_POLYSAT = AHEIP_HEALTHY(POLYSAT_RT, AHEIP_MIN_POLYSAT_SERV, AHEIP_MAX_POLYSAT_SERV),
AHEIP_CALCIUM = AHEIP_HEALTHY(CALCIUM_SERV, AHEIP_MIN_CALCIUM_SERV, AHEIP_MAX_CALCIUM_SERV),
AHEIP_FOLATE= AHEIP_HEALTHY(FOLATE_SERV, AHEIP_MIN_FOLATE_SERV, AHEIP_MAX_FOLATE_SERV),
AHEIP_IRON = AHEIP_HEALTHY(IRON_SERV, AHEIP_MIN_IRON_SERV, AHEIP_MAX_IRON_SERV),
AHEIP_ALL = AHEIP_VEG + AHEIP_FRT + AHEIP_WHITEREAD + AHEIP_FIBER + AHEIP_TRANS +
AHEIP_POLYSAT + AHEIP_CALCIUM + AHEIP_FOLATE + AHEIP_IRON
)
ggplot(Clean_result_data_ALL, aes(AHEIP_ALL))+
geom_histogram()
#Serving calculation for HEI2015
Clean_result_data_SERV7 = Clean_result_data_ALL %>%
mutate(
TOTALFRT_SERV = F_TOTAL/(DT_KCAL/1000),
FRT_SERV = F_SOLID/(DT_KCAL/1000),
VEG_SERV = (V_TOTAL+LEGUMES)/(DT_KCAL/1000),
GREENNBEAN_SERV = (V_DRKGR+LEGUMES)/(DT_KCAL/1000),
TOTALPRO_SERV = (M_MPF+M_EGG+M_NUTSD+M_SOY+(LEGUMES*4))/(DT_KCAL/1000),
SEAPLANTPRO_SERV = (M_FISH_HI+M_FISH_LO+M_SOY+M_NUTSD+(LEGUMES*4))/(DT_KCAL/1000),
WHOLEGRAIN_SERV = G_WHL/(DT_KCAL/1000),
DAIRY_SERV = D_TOTAL/(DT_KCAL/1000),
FATTYACID_SERV = (DT_MFAT + DT_PFAT)/DT_SFAT,
REFINEDGRAIN_SERV = G_NWHL/(DT_KCAL/1000),
SODIUM_SERV = (DT_SODI/1000)/(DT_KCAL/1000),
ADDEDSUGAR_SERV = ((ADD_SUG*4*4) / DT_KCAL)*100,
SATFAT_SERV = ((DT_SFAT*9)/DT_KCAL)*100
)
#Score calculation for HEI2015
##Create variables needed for HEI2015 calculation
HEI2015_MIN = 0
HEI2015_MAX1 = 5
HEI2015_MAX2 = 10
HEI2015_MIN_TOTALFRT_SERV = 0
HEI2015_MAX_TOTALFRT_SERV = 0.8
HEI2015_MIN_FRT_SERV = 0
HEI2015_MAX_FRT_SERV = 0.4
HEI2015_MIN_VEG_SERV = 0
HEI2015_MAX_VEG_SERV = 1.1
HEI2015_MIN_GREENNBEAN_SERV = 0
HEI2015_MAX_GREENNBEAN_SERV = 0.2
HEI2015_MIN_TOTALPRO_SERV = 0
HEI2015_MAX_TOTALPRO_SERV = 2.5
HEI2015_MIN_SEAPLANTPRO_SERV = 0
HEI2015_MAX_SEAPLANTPRO_SERV = 0.8
HEI2015_MIN_WHOLEGRAIN_SERV = 0
HEI2015_MAX_WHOLEGRAIN_SERV = 1.5
HEI2015_MIN_DAIRY_SERV = 0
HEI2015_MAX_DAIRY_SERV = 1.3
HEI2015_MIN_FATTYACID_SERV = 1.2
HEI2015_MAX_FATTYACID_SERV = 2.5
HEI2015_MIN_REFINEDGRAIN_SERV = 4.3
HEI2015_MAX_REFINEDGRAIN_SERV = 1.8
HEI2015_MIN_SODIUM_SERV = 2.0
HEI2015_MAX_SODIUM_SERV = 1.1
HEI2015_MIN_ADDEDSUGAR_SERV = 26
HEI2015_MAX_ADDEDSUGAR_SERV = 6.5
HEI2015_MIN_SATFAT_SERV = 16
HEI2015_MAX_SATFAT_SERV = 8
HEI2015_HEALTHY1 = function(actual, min, max){
case_when(
actual >= max ~ HEI2015_MAX1,
actual <= min ~ HEI2015_MIN,
TRUE ~ HEI2015_MIN+(actual-min)*HEI2015_MAX1/(max-min)
)
}
HEI2015_HEALTHY2 = function(actual, min, max){
case_when(
actual >= max ~ HEI2015_MAX2,
actual <= min ~ HEI2015_MIN,
TRUE ~ HEI2015_MIN+(actual-min)*HEI2015_MAX2/(max-min)
)
}
HEI2015_UNHEALTHY = function(actual, min, max){
case_when(
actual >= min ~ HEI2015_MIN,
actual <= max ~ HEI2015_MAX2,
TRUE ~ HEI2015_MIN+(actual-min)*HEI2015_MAX2/(max-min)
)
}
Clean_result_data_ALL = Clean_result_data_SERV7 %>%
mutate(
HEI2015_TOTALFRT = HEI2015_HEALTHY1(TOTALFRT_SERV, HEI2015_MIN_TOTALFRT_SERV, HEI2015_MAX_TOTALFRT_SERV),
HEI2015_FRT = HEI2015_HEALTHY1(FRT_SERV, HEI2015_MIN_FRT_SERV, HEI2015_MAX_FRT_SERV),
HEI2015_VEG = HEI2015_HEALTHY1(VEG_SERV, HEI2015_MIN_VEG_SERV, HEI2015_MAX_VEG_SERV),
HEI2015_GREENNBEAN = HEI2015_HEALTHY1(GREENNBEAN_SERV, HEI2015_MIN_GREENNBEAN_SERV, HEI2015_MAX_GREENNBEAN_SERV),
HEI2015_TOTALPRO = HEI2015_HEALTHY1(TOTALPRO_SERV, HEI2015_MIN_TOTALPRO_SERV, HEI2015_MAX_TOTALPRO_SERV),
HEI2015_SEAPLANTPRO = HEI2015_HEALTHY1(SEAPLANTPRO_SERV, HEI2015_MIN_SEAPLANTPRO_SERV, HEI2015_MAX_SEAPLANTPRO_SERV),
HEI2015_WHOLEGRAIN = HEI2015_HEALTHY2(WHOLEGRAIN_SERV, HEI2015_MIN_WHOLEGRAIN_SERV, HEI2015_MAX_WHOLEGRAIN_SERV),
HEI2015_DAIRY = HEI2015_HEALTHY2(DAIRY_SERV, HEI2015_MIN_DAIRY_SERV, HEI2015_MAX_DAIRY_SERV),
HEI2015_FATTYACID = HEI2015_HEALTHY2(FATTYACID_SERV, HEI2015_MIN_FATTYACID_SERV, HEI2015_MAX_FATTYACID_SERV),
HEI2015_REFINEDGRAIN = HEI2015_UNHEALTHY(REFINEDGRAIN_SERV, HEI2015_MIN_REFINEDGRAIN_SERV, HEI2015_MAX_REFINEDGRAIN_SERV),
HEI2015_SODIUM = HEI2015_UNHEALTHY(SODIUM_SERV, HEI2015_MIN_SODIUM_SERV, HEI2015_MAX_SODIUM_SERV),
HEI2015_ADDEDSUGAR = HEI2015_UNHEALTHY(ADDEDSUGAR_SERV, HEI2015_MIN_ADDEDSUGAR_SERV, HEI2015_MAX_ADDEDSUGAR_SERV),
HEI2015_SATFAT = HEI2015_UNHEALTHY(SATFAT_SERV, HEI2015_MIN_SATFAT_SERV, HEI2015_MAX_SATFAT_SERV),
HEI2015_ALL= HEI2015_TOTALFRT + HEI2015_FRT + HEI2015_VEG + HEI2015_GREENNBEAN +
HEI2015_TOTALPRO + HEI2015_SEAPLANTPRO + HEI2015_WHOLEGRAIN + HEI2015_DAIRY +
HEI2015_FATTYACID + HEI2015_REFINEDGRAIN + HEI2015_SODIUM + HEI2015_ADDEDSUGAR +
HEI2015_SATFAT
)
ggplot(Clean_result_data_ALL, aes(HEI2015_ALL))+
geom_histogram()
#Serving calculation for DII
DII_PATH <- "/Users/yan/Desktop/Emory University - Ph.D./Research rotation/Microbiome research/Data/Dietary data/DII.csv"
DII_STD <- read_csv(DII_PATH)
DII_STD
DII_STD1 = DII_STD %>%
select(Food, Unit, Variable, `Overall_inflammatory_score`, `Global_mean`, SD)%>%
na.omit(DII_STD)
DII_STD2 = DII_STD %>%
select(Percentile_standard, DII_standard)%>%
na.omit(DII_STD)
Clean_result_data_SERV8 = Clean_result_data_ALL %>%
mutate(
ALCOHOL = DT_ALCO,
VITB12 = DT_VB12,
VITB6 = DT_VITB6,
BCAROTENE = DT_BCARO,
CAFFEINE = DT_CAFFN/1000,
CARB = DT_CARB,
CHOLES = DT_CHOL,
KCAL = DT_KCAL,
TOTALFAT = DT_TFAT,
FIBER = DT_FIBE,
FOLICACID = DT_FOLAC,
IRON = DT_IRON,
MG = DT_MAGN,
MUFA = DT_MFAT,
NIACIN = DT_NIAC,
N3FAT = DT_TOTN3,
N6FAT = DT_TOTN6,
PROTEIN = DT_PROT,
PUFA = DT_PFAT,
RIBOFLAVIN = DT_RIBO,
SATFAT = DT_SFAT,
SE = DT_SEL,
THIAMIN = DT_THIA,
TRANSFAT = DT_TRFAT,
VITA = DT_VARAE,
VITC = DT_VITC,
VITD = DT_VITD*0.025,
VITE = DT_ATOC,
ZN = DT_ZINC,
TEA = foodfreq(ICEDTEAFREQ)*ICEDTEAQUAN*240 + foodfreq(HOTTEAFREQ)*HOTTEAQUAN*240,
ISOFLAVONES = DT_ISOFLV) %>%
select(RESPONDENTID, ALCOHOL, VITB12, VITB6, BCAROTENE,CAFFEINE,CARB,CHOLES,KCAL,TOTALFAT,FIBER,FOLICACID,
IRON,MG,MUFA,NIACIN,N3FAT,N6FAT,PROTEIN,PUFA,RIBOFLAVIN,SATFAT,SE,THIAMIN,TRANSFAT,
VITA,VITC,VITD,VITE,ZN,TEA,ISOFLAVONES)
#Scorecalculation for DII
##Create variables needed for DII calculation
Clean_result_data_SERV8_LONGER= Clean_result_data_SERV8 %>%
pivot_longer(-RESPONDENTID, names_to="Variable", values_to="Unit")
Clean_result_data_SERV8_LONGER2 = Clean_result_data_SERV8_LONGER %>%
left_join(DII_STD1, by=c("Variable")) %>%
mutate(
Z_SCORE = (Unit.x - Global_mean)/SD,
PERCENTILE = pnorm(Z_SCORE)*2 - 1,
IND_DII_SCORE = PERCENTILE*Overall_inflammatory_score) %>%
group_by(RESPONDENTID)%>%
summarize(DII_ALL = sum(IND_DII_SCORE))
Clean_result_data_ALL = Clean_result_data_ALL %>%
left_join(Clean_result_data_SERV8_LONGER2, by=c("RESPONDENTID"))
ggplot(Clean_result_data_ALL, aes(DII_ALL))+
geom_histogram()
#Summary for all dietary indexes
max_trans = function(DATA){
(DATA - min(DATA))/(max(DATA) - min(DATA))
}
Clean_result_data_ALL = Clean_result_data_ALL%>%
mutate(
row_id = row_number(),
AHEI_ALL_perc = max_trans(AHEI_ALL),
AHEI_NOETOH_perc = max_trans(AHEI_NOETOH),
DASH_ALL_perc = max_trans(DASH_ALL),
DASHI_ALL_perc = max_trans(DASHI_ALL),
MED_ALL_perc = max_trans(MED_ALL),
MED_NOETOH_perc = max_trans(MED_NOETOH),
MEDI_ALL_perc = max_trans(MEDI_ALL),
MEDI_NOETOH_perc = max_trans(MEDI_NOETOH),
AHEIP_ALL_perc = max_trans(AHEIP_ALL),
HEI2015_ALL_perc = max_trans(HEI2015_ALL),
DII_ALL_perc = max_trans(DII_ALL)
)
# ord<-c("AHEI_ALL", "AHEI_NOETOH" , "AHEIP_ALL", "DASH_ALL", "DASHI_ALL", "MED_NOETOH"
#        , "MEDI_NOETOH")
# ord<-factor(ord, ordered=T)
# ord
# df<-tidyr::gather(Clean_result_data_ALL, groups, index, -RESPONDENTID)
# df
# df$groups<-factor(df$groups, levels = ord, ordered=T)
# df
# target<-c("")
# for (i in ord){
#   target<-append(target, i)
#   subset.data.frame(df, groups %in% target) %>%
#     ggplot(aes(x=RESPONDENTID,y=index, color=groups))+geom_point()
# }
Clean_result_data_ALL %>%
select(RESPONDENTID, AHEI_NOETOH, AHEIP_ALL, HEI2015_ALL, DASH_ALL, DASHI_ALL, MED_ALL,
MED_NOETOH, MEDI_ALL, MEDI_NOETOH, AHEIP_ALL, DII_ALL)
Clean_result_data_ALL %>%
select(RESPONDENTID, AHEI_NOETOH_perc, AHEIP_ALL_perc, HEI2015_ALL_perc,
DASH_ALL_perc, DASHI_ALL_perc, MED_NOETOH_perc, MEDI_NOETOH_perc, DII_ALL_perc) %>%
print(width=Inf)
Clean_result_data_ALL %>%
ggplot(aes(x=row_id))+
scale_y_continuous(limits=c(0,1))+
geom_point(aes(y=AHEI_ALL_perc, color="AHEI_ALL"))+
labs(x= "Participant ID", y= "Dietary pattern indexes")+
# scale_colour_manual(name="color",
#                     values = c("AHEI_ALL"="#F8766D"))
geom_point(aes(y= AHEI_NOETOH_perc, color="AHEI_NOETOH"))+
# scale_colour_manual(name="color",
#                     values = c("AHEI_ALL"="#F8766D",
#                                "AHEI_NOETOH" = "#FFFF00"))
geom_point(aes(y= AHEIP_ALL_perc, color="AHEIP_ALL"))+
# scale_colour_manual(name="color",
#                     values = c("AHEI_ALL"="#F8766D",
#                                "AHEI_NOETOH" = "#FFFF00",
#                                "AHEIP_ALL" = "#53B400"))
geom_point(aes(y= DASH_ALL_perc, color="DASH_ALL"))+
# scale_colour_manual(name="color",
#                     values = c("AHEI_ALL"="#F8766D",
#                                "AHEI_NOETOH" = "#FFFF00",
#                                "AHEIP_ALL" = "#53B400",
#                                "DASH_ALL" = "#A58AFF"))
geom_point(aes(y= DASHI_ALL_perc, color="DASHI_ALL"))+
# scale_colour_manual(name="color",
#                     values = c("AHEI_ALL"="#F8766D",
#                                "AHEI_NOETOH" = "#FFFF00",
#                                "AHEIP_ALL" = "#53B400",
#                                "DASH_ALL" = "#A58AFF",
#                                "DASHI_ALL" = "#0000FF"))
geom_point(aes(y= MED_NOETOH_perc, color="MED_NOETOH"))+
# scale_colour_manual(name="color",
#                     values = c("AHEI_ALL"="#F8766D",
#                                "AHEI_NOETOH" = "#FFFF00",
#                                "AHEIP_ALL" = "#53B400",
#                                "DASH_ALL" = "#A58AFF",
#                                "DASHI_ALL" = "#0000FF",
#                                "MED_NOETOH" = "#FB61D7"))
geom_point(aes(y= MEDI_NOETOH_perc, color="MEDI_NOETOH"))+
# scale_colour_manual(name="color",
#                       values = c("AHEI_ALL"="#F8766D",
#                                  "AHEI_NOETOH" = "#FFFF00",
#                                  "AHEIP_ALL" = "#53B400",
#                                  "DASH_ALL" = "#A58AFF",
#                                  "DASHI_ALL" = "#0000FF",
#                                  "MED_NOETOH" = "#FB61D7",
#                                  "MEDI_NOETOH" = "#000000"))
geom_point(aes(y= HEI2015_ALL_perc, color="HEI2015_ALL"))+
#   scale_colour_manual(name="color",
#                       values = c("AHEI_ALL"="#F8766D",
#                                  "AHEI_NOETOH" = "#FFFF00",
#                                  "AHEIP_ALL" = "#53B400",
#                                  "DASH_ALL" = "#A58AFF",
#                                  "DASHI_ALL" = "#0000FF",
#                                  "MED_NOETOH" = "#FB61D7",
#                                  "MEDI_NOETOH" = "#000000",
#                                  "HEI2015_ALL" = "#F37735"))+
geom_point(aes(y= DII_ALL_perc, color="DII_ALL"))+
scale_colour_manual(name="color",
values = c("AHEI_ALL"="#F8766D",
"AHEI_NOETOH" = "#FFFF00",
"AHEIP_ALL" = "#53B400",
"DASH_ALL" = "#A58AFF",
"DASHI_ALL" = "#0000FF",
"MED_NOETOH" = "#FB61D7",
"MEDI_NOETOH" = "#000000",
"HEI2015_ALL" = "#F37735",
"DII_ALL" = "red"))
#import outcome data
outcome_path <- "/Users/yan/Desktop/Emory University - Ph.D./Research rotation/Microbiome research/Data/Outcome and Baseline data/MPTB_AA Cohort_N651_Questionnaire-MedRecord_Cutting to set for James Zhan, de-identified.csv"
outcome_data <- read_csv(outcome_path)
glimpse(outcome_data)
outcome_path <- "/Users/yan/Desktop/Emory University - Ph.D./Research rotation/Microbiome research/Data/Outcome and Baseline data/MPTB_AA Cohort_N651_Questionnaire-MedRecord_Cutting to set for James Zhan, de-identified.csv"
outcome_data <- fread(outcome_path)
glimpse(outcome_data)
#Load packages
Packages <- c("dplyr", "ggplot2", "broom", "readr", "glmnet", "tidyr", "data.table", "survival", "survminer")
lapply(Packages, library, character.only = TRUE)
#import outcome data
outcome_path <- "/Users/yan/Desktop/Emory University - Ph.D./Research rotation/Microbiome research/Data/Outcome and Baseline data/MPTB_AA Cohort_N651_Questionnaire-MedRecord_Cutting to set for James Zhan, de-identified.csv"
outcome_data <- fread(outcome_path)
glimpse(outcome_data)
outcome_data
class(outcome_data)
glimpse(outcome_data)
outcome_data
Clean_result_data
glimpse(Clean_result_data)
#Examine the completed dietary data
glimpse(Clean_result_data_ALL)
Clean_result_data_ALL %>%
separate(RESPONDENTID, into = c("RESPONDENT", "Visit"), sep = "-") %>%
select(RESPONDENT, Visit, AHEI_NOETOH, AHEIP_ALL, HEI2015_ALL,
DASH_ALL, DASHI_ALL, MED_NOETOH, MEDI_NOETOH, DII_ALL)
Clean_result_data_ALL %>%
separate(RESPONDENTID, into = c("RESPONDENT", "Visit"), sep = "-") %>%
filter(Visit == 1) %>%
select(RESPONDENT, Visit, AHEI_NOETOH, AHEIP_ALL, HEI2015_ALL,
DASH_ALL, DASHI_ALL, MED_NOETOH, MEDI_NOETOH, DII_ALL)
dietary_data_cleaned = Clean_result_data_ALL %>%
separate(RESPONDENTID, into = c("RESPONDENT", "Visit"), sep = "-") %>%
filter(Visit == 1) %>%
select(RESPONDENT, Visit, AHEI_NOETOH, AHEIP_ALL, HEI2015_ALL,
DASH_ALL, DASHI_ALL, MED_NOETOH, MEDI_NOETOH, DII_ALL)
glimpse(outcome_data)
dietary_data = Clean_result_data_ALL %>%
separate(RESPONDENTID, into = c("RESPONDENT", "Visit"), sep = "-") %>%
filter(Visit == 1) %>%
select(RESPONDENT, Visit, AHEI_NOETOH, AHEIP_ALL, HEI2015_ALL,
DASH_ALL, DASHI_ALL, MED_NOETOH, MEDI_NOETOH, DII_ALL)
dietary_data %>%
inner_join(outcome_data, by = c("RESPONDENT", "subjectid"))
data_outcome_data = dietary_data %>%
inner_join(outcome_data, by = c("RESPONDENT", "subjectid"))
#import outcome data
outcome_path <- "/Users/yan/Desktop/Emory University - Ph.D./Research rotation/Microbiome research/Data/Outcome and Baseline data/MPTB_AA Cohort_N651_Questionnaire-MedRecord_Cutting to set for James Zhan, de-identified.csv"
outcome_data <- fread(outcome_path)
glimpse(outcome_data)
glimpse(Clean_result_data_ALL)
dietary_data = Clean_result_data_ALL %>%
separate(RESPONDENTID, into = c("RESPONDENT", "Visit"), sep = "-") %>%
filter(Visit == 1) %>%
select(RESPONDENT, Visit, AHEI_NOETOH, AHEIP_ALL, HEI2015_ALL,
DASH_ALL, DASHI_ALL, MED_NOETOH, MEDI_NOETOH, DII_ALL)
dietary_data %>%
inner_join(outcome_data, by = c("RESPONDENT", "subjectid"))
glimpse(outcome_data)
dietary_data
glimpse(outcome_data)
#import outcome data
outcome_path <- "/Users/yan/Desktop/Emory University - Ph.D./Research rotation/Microbiome research/Data/Outcome and Baseline data/MPTB_AA Cohort_N651_Questionnaire-MedRecord_Cutting to set for James Zhan, de-identified.csv"
outcome_data <- read_csv(outcome_path)
glimpse(outcome_data)
#Merge dietary data and outcome data
data_outcome_data = dietary_data %>%
inner_join(outcome_data, by = c("RESPONDENT", "subjectid"))
#import outcome data
outcome_path <- "/Users/yan/Desktop/Emory University - Ph.D./Research rotation/Microbiome research/Data/Outcome and Baseline data/MPTB_AA Cohort_N651_Questionnaire-MedRecord_Cutting to set for James Zhan, de-identified.csv"
outcome_data <- fread(outcome_path)
glimpse(outcome_data)
#Merge dietary data and outcome data
data_outcome_data = dietary_data %>%
inner_join(outcome_data, by = c("RESPONDENT", "subjectid"))
outcome_data$subjectid
dietary_data %>%
inner_join(outcome_data, by = c("RESPONDENT"="subjectid"))
data_outcome_data = dietary_data %>%
inner_join(outcome_data, by = c("RESPONDENT"="subjectid"))
#Merge dietary data and outcome data
diet_outcome_data = dietary_data %>%
inner_join(outcome_data, by = c("RESPONDENT"="subjectid"))
#Dichotomize cardiometabolic outcomes
diet_outcome_data$Comp_CardiometvsHealthyFullTerm = factor(diet_outcome_data$Comp_CardiometvsHealthyFullTerm,
levels = c("1", "0"),
labels = c("Yes", "No"))
diet_outcome_data$Comp_PreeclampgHTNvsHealthyFullTerm = factor(diet_outcome_data$Comp_PreeclampgHTNvsHealthyFullTerm,
levels = c("1", "0"),
labels = c("Yes", "No"))
diet_outcome_data$Comp_PreeclampvsHealthyFullTerm = factor(diet_outcome_data$Comp_PreeclampvsHealthyFullTerm,
levels = c("1", "0"),
labels = c("Yes", "No"))
diet_outcome_data$Comp_gHTNvsHealthyFullTerm = factor(diet_outcome_data$Comp_gHTNvsHealthyFullTerm,
levels = c("1", "0"),
labels = c("Yes", "No"))
diet_outcome_data$Comp_gDMvsHealthyFullTerm = factor(diet_outcome_data$Comp_gDMvsHealthyFullTerm,
levels = c("1", "0"),
labels = c("Yes", "No"))
#Merge dietary data and outcome data
diet_outcome_data = dietary_data %>%
inner_join(outcome_data, by = c("RESPONDENT"="subjectid"))
#Dichotomize cardiometabolic outcomes
diet_outcome_data$Comp_CardiometvsHealthyFullTerm = factor(diet_outcome_data$Comp_CardiometvsHealthyFullTerm,
levels = c("1", "0"),
labels = c("Yes", "No"))
diet_outcome_data$Comp_PreeclampgHTNvsHealthyFullTerm = factor(diet_outcome_data$Comp_PreeclampgHTNvsHealthyFullTerm,
levels = c("1", "0"),
labels = c("Yes", "No"))
diet_outcome_data$Comp_PreeclampvsHealthyFullTerm = factor(diet_outcome_data$Comp_PreeclampvsHealthyFullTerm,
levels = c("1", "0"),
labels = c("Yes", "No"))
diet_outcome_data$Comp_gHTNvsHealthyFullTerm = factor(diet_outcome_data$Comp_gHTNvsHealthyFullTerm,
levels = c("1", "0"),
labels = c("Yes", "No"))
diet_outcome_data$Comp_gDMvsHealthyFullTerm = factor(diet_outcome_data$Comp_gDMvsHealthyFullTerm,
levels = c("1", "0"),
labels = c("Yes", "No"))
quantile(diet_outcome_data$AHEI_NOETOH, probs=seq(0, 1, by=0.2))
Clean_result_data_ALL %>%
separate(RESPONDENTID, into = c("RESPONDENT", "Visit"), sep = "-") %>%
filter(Visit == 1) %>%
select(RESPONDENT, Visit, AHEI_NOETOH, AHEIP_ALL, HEI2015_ALL,
DASH_ALL, DASHI_ALL, MED_NOETOH, MEDI_NOETOH, DII_ALL) %>%
mutate(
AHEI_NOETOH_quin = quintile_dietindex(AHEI_NOETOH),
AHEIP_ALL_quin = quintile_dietindex(AHEIP_ALL),
HEI2015_ALL_quin = quintile_dietindex(HEI2015_ALL),
DASH_ALL_quin = quintile_dietindex(DASH_ALL),
DASHI_ALL_quin = quintile_dietindex(DASHI_ALL),
MED_NOETOH_quin = quintile_dietindex(MED_NOETOH),
MEDI_NOETOH_quin = quintile_dietindex(MEDI_NOETOH),
DII_ALL_quin = quintile_dietindex(DII_ALL),
)
quintile_dietindex = function(actual){
quintile = quantile(actual, probs=seq(0, 1, by=0.2))
case_when(
actual <= quintile[6] & actual >= quintile[5] ~ 5,
actual < quintile[5] & actual >= quintile[4] ~ 4,
actual < quintile[4] & actual >= quintile[3] ~ 3,
actual < quintile[3] & actual >= quintile[2] ~ 2,
actual < quintile[2] & actual >= quintile[1] ~ 1
)
Clean_result_data_ALL %>%
separate(RESPONDENTID, into = c("RESPONDENT", "Visit"), sep = "-") %>%
filter(Visit == 1) %>%
select(RESPONDENT, Visit, AHEI_NOETOH, AHEIP_ALL, HEI2015_ALL,
DASH_ALL, DASHI_ALL, MED_NOETOH, MEDI_NOETOH, DII_ALL) %>%
mutate(
AHEI_NOETOH_quin = quintile_dietindex(AHEI_NOETOH),
AHEIP_ALL_quin = quintile_dietindex(AHEIP_ALL),
HEI2015_ALL_quin = quintile_dietindex(HEI2015_ALL),
DASH_ALL_quin = quintile_dietindex(DASH_ALL),
DASHI_ALL_quin = quintile_dietindex(DASHI_ALL),
MED_NOETOH_quin = quintile_dietindex(MED_NOETOH),
MEDI_NOETOH_quin = quintile_dietindex(MEDI_NOETOH),
DII_ALL_quin = quintile_dietindex(DII_ALL),
)
Clean_result_data_ALL %>%
separate(RESPONDENTID, into = c("RESPONDENT", "Visit"), sep = "-") %>%
filter(Visit == 1) %>%
select(RESPONDENT, Visit, AHEI_NOETOH, AHEIP_ALL, HEI2015_ALL,
DASH_ALL, DASHI_ALL, MED_NOETOH, MEDI_NOETOH, DII_ALL) %>%
mutate(
AHEI_NOETOH_quin = quintile_dietindex(AHEI_NOETOH),
AHEIP_ALL_quin = quintile_dietindex(AHEIP_ALL),
HEI2015_ALL_quin = quintile_dietindex(HEI2015_ALL),
DASH_ALL_quin = quintile_dietindex(DASH_ALL),
DASHI_ALL_quin = quintile_dietindex(DASHI_ALL),
MED_NOETOH_quin = quintile_dietindex(MED_NOETOH),
MEDI_NOETOH_quin = quintile_dietindex(MEDI_NOETOH),
DII_ALL_quin = quintile_dietindex(DII_ALL),
)
dietary_data = Clean_result_data_ALL %>%
separate(RESPONDENTID, into = c("RESPONDENT", "Visit"), sep = "-") %>%
filter(Visit == 1) %>%
select(RESPONDENT, Visit, AHEI_NOETOH, AHEIP_ALL, HEI2015_ALL,
DASH_ALL, DASHI_ALL, MED_NOETOH, MEDI_NOETOH, DII_ALL) %>%
mutate(
AHEI_NOETOH_quin = quintile_dietindex(AHEI_NOETOH),
AHEIP_ALL_quin = quintile_dietindex(AHEIP_ALL),
HEI2015_ALL_quin = quintile_dietindex(HEI2015_ALL),
DASH_ALL_quin = quintile_dietindex(DASH_ALL),
DASHI_ALL_quin = quintile_dietindex(DASHI_ALL),
MED_NOETOH_quin = quintile_dietindex(MED_NOETOH),
MEDI_NOETOH_quin = quintile_dietindex(MEDI_NOETOH),
DII_ALL_quin = quintile_dietindex(DII_ALL),
)
dietary_data
Clean_result_data_ALL %>%
separate(RESPONDENTID, into = c("RESPONDENT", "Visit"), sep = "-") %>%
filter(Visit == 1) %>%
select(RESPONDENT, Visit, AHEI_NOETOH, AHEIP_ALL, HEI2015_ALL,
DASH_ALL, DASHI_ALL, MED_NOETOH, MEDI_NOETOH, DII_ALL)
glimpse(Clean_result_data_ALL)
glimpse(Clean_result_data_ALL)
print(1)
